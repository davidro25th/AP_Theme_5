// <auto-generated />
using System;
using AP_Theme_5.DataAcces.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AP_Theme_5.DataAcces.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240620163956_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.31");

            modelBuilder.Entity("AP_Theme_5.Domain.Entities.Configuration_Data.Variable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Variables", (string)null);
                });

            modelBuilder.Entity("AP_Theme_5.Domain.Entities.Configuration_Data.Worker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Workers", (string)null);
                });

            modelBuilder.Entity("AP_Theme_5.Domain.Entities.HistoricData.Alarm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IncidencenceDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecoveryDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Alarms", (string)null);
                });

            modelBuilder.Entity("AP_Theme_5.Domain.Entities.HistoricData.AuditEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Ocurrence")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WorkerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("AuditEvents", (string)null);
                });

            modelBuilder.Entity("AP_Theme_5.Domain.Entities.Configuration_Data.Variable", b =>
                {
                    b.OwnsOne("AP_Theme_5.Domain.ValueObjects.MeasurementUnit", "MeasurementUnit", b1 =>
                        {
                            b1.Property<Guid>("VariableId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("UnitName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("UnitType")
                                .HasColumnType("TEXT");

                            b1.HasKey("VariableId");

                            b1.ToTable("MeasurementUnits");

                            b1.WithOwner()
                                .HasForeignKey("VariableId");
                        });

                    b.Navigation("MeasurementUnit");
                });

            modelBuilder.Entity("AP_Theme_5.Domain.Entities.HistoricData.Alarm", b =>
                {
                    b.OwnsOne("AP_Theme_5.Domain.ValueObjects.AlarmConfiguration", "AlarmConfiguration", b1 =>
                        {
                            b1.Property<Guid>("AlarmId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("AlarmVariableId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("OutOfRange")
                                .HasColumnType("REAL");

                            b1.Property<int>("Priority")
                                .HasColumnType("INTEGER");

                            b1.HasKey("AlarmId");

                            b1.HasIndex("AlarmVariableId");

                            b1.ToTable("Alarms");

                            b1.WithOwner()
                                .HasForeignKey("AlarmId");

                            b1.HasOne("AP_Theme_5.Domain.Entities.Configuration_Data.Variable", "AlarmVariable")
                                .WithMany()
                                .HasForeignKey("AlarmVariableId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("AlarmVariable");
                        });

                    b.Navigation("AlarmConfiguration")
                        .IsRequired();
                });

            modelBuilder.Entity("AP_Theme_5.Domain.Entities.HistoricData.AuditEvent", b =>
                {
                    b.HasOne("AP_Theme_5.Domain.Entities.Configuration_Data.Worker", "Worker")
                        .WithMany("AuditEvent")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("AP_Theme_5.Domain.Entities.Configuration_Data.Worker", b =>
                {
                    b.Navigation("AuditEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
